name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0

      # 1. Format check
      - name: Terraform fmt
        run: terraform fmt -check -diff

      # 2. Init
      - name: Terraform init
        run: terraform init -input=false

      # 3. Validate
      - name: Terraform validate
        run: terraform validate

      # 4. Configure AWS credentials (somente se secrets existirem)
      - name: Configure AWS credentials
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 5. Terraform plan (só se tiver creds)
      - name: Terraform plan (if creds available)
        if: ${{ secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        run: terraform plan -input=false -out=tfplan
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      # 6. Terraform apply (só no merge na main e se tiver creds)
      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != ''
        run: terraform apply -input=false -auto-approve tfplan
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
